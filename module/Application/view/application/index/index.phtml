<div class="jumbotron">
    <h2>Work in Progress: <span class="zf-green">Automated Housing Rent for Everybody</span></h2>
    <p>
    Two trends have been observed when it comes to housing portals (mid to long term rentals). The amount of rentees (people who need a place to stay)
    exceeds the amount of renters (people who are willing to rent a place to stay). The renters tend to prioritize the following behaviours/ attributes when looking for rentees: economical gains/ stability, non-destructive behaviours, the level of education, the sex of the rentee and the ethnicity of the rentee. The last two traits are illegal to market. However facebook groups are popular exactly because they provide full transparency to the renter. This process however is manual and time consuming, thus with this project we propose a platform that: will try to filter out irrelevant requests for renters in order to recommend the ideal rentee, and will try to minimize the price for the rentee based on the features most relevant to the renter.  
    </p>

    <p><a class="btn btn-success btn-lg" href="/" target="_blank">Check It Out &raquo;</a></p>
</div>

<div class="row">

    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">The Minimum Spanning Tree Problem</h3>
            </div>
            <div class="panel-body">
                <p>
Abstract. In this thesis we review the evolution of the minimum-spanning-tree
problem with the aim of solving it. In order to solve the problem, one must reduce
the running time from O(mα(m, n)) to O(m) in a deterministic fashion. On the
RAM model we manage to show that the disjoint sets operations performed in
computing the minimum spanning tree can be made to run in linear time by allowing
a certain degree of error that must be accounted for. We propose a linear time
density partition procedure with the aim of producing a sparse graph in which
the minimum spanning tree of the original graph lies. We also explore how to
classify the cycles of a sparse graph on levels such that the small cycles lie at low
levels, and the longer ones lie at high level. We need such a cycle classification in
order to trim the components of low degree of the graph in O(n) time, instead of
O(n^2). Finally we discuss an algorithm based on the density partition, the cycle
hierarchy, and the disjoint-sets with error that seems to run in linear time on the
RAM model, without any assumptions on the edge weights, and without the use
of randomization. However, this discussion has little to offer if one wishes to solve
the problem on a pointer machine, as the bottleneck will represent the operations
performed by the disjoint-sets data structure without using table look-up, which is
O(mα(m, n)).
                </p>

                <p><a class="btn btn-success pull-right" href="/pdf/thesis.pdf" target="_blank">Read the PDF Here &raquo;</a></p>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">A Blockchain Study Case - Maersk</h3>
            </div>
            <div class="panel-body">
                <p>
This paper will explore three solutions for the problem of storing and keeping
financial data synchronised across the subsidiaries of a large company, with the
possibility of granting an outside entity limited access to it such that the validity
of the data can be agreed on.
The next chapters present an instance of the problem, a solution from a centralised
perspective, a distributed ledger perspective, and a blockchain perspective,
with regard to the advantages and disatvantages of each particular case.
                </p>

                <p><a class="btn btn-success pull-right" href="/pdf/blockchain-protocol.pdf" target="_blank">Read the PDF Here &raquo;</a></p>
            </div>
        </div>
    </div>

    <div class="col-md-4">
    <div class="row">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Javascript Web Hosting Deployment &amp; Java Concurrent Web Store</h3>
            </div>
            <div class="panel-body">
                <p>
Here are two private projects that I have developed for other people.
The fullstack mean.io project has been made for <a href="https://www.skywalkr.io/"  target="_blank"> skywalkr.io</a>.
The java application that mimics an amazon go store has been made as part of the exam for the course Advanced
Computer Systems. In order to get temporary access to the projects, please send me an<a href="mailto:mfc@marius-cristian.com"> e-mail</a>. However you are not allowed
to copy or redistribute any part of the code.
                </p>

                <p><a class="btn btn-success pull-right" href="https://bitbucket.org/marius-cristian/2_private_projects/src" target="_blank">Go to the Repository</a></p>
            </div>
        </div>


     </div>
     <div class="row">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Combating Fake News &amp; Project Lynir</h3>
            </div>
            <div class="panel-body">
                <p>
                    My role as part of project lynir was to set up a webcrawler and indexer for news sources. The goal of the project was to combat fake news by displaying in a chronological order fact checked news from thrustworthy sources.
                    The web crawler used is <a href="http://nutch.apache.org/">apache nutch</a>, and the indexer used is
                    <a href="http://lucene.apache.org/solr/">apache solr lucene</a>. You can try a search query below or check the feel of the admin panel at <a href="http://159.69.116.243:8983/solr/#/nutch3/query"> http://159.69.116.243:8983/solr/#/nutch3/query</a>.
                </p>

                <p><a class="btn btn-success pull-right" href="http://159.69.116.243:8983/solr/nutch3/select?q=trump&df=content" target="_blank">Search for Trump!</a></p>
            </div>
        </div>


     </div> 
    </div>
</div>
